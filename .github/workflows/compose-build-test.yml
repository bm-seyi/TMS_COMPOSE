name: Docker Compose Integration Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docker-integration-test:
    runs-on: ubuntu-latest

    env:
      REDIS_PWD: testpassword
      VAULT_DEV_ROOT_TOKEN_ID: root_token
      MSSQL_PWD: "StrongPassword123"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify installation


    - name: Create mssql_data volume if not exists
      run: |
        docker volume ls | grep mssql_data || docker volume create mssql_data

    - name: Start services with Docker Compose
      run: docker-compose up -d
    
    - name: Wait for SQL Server to be healthy
      run: |
        timeout 300 bash -c 'until [ "$(docker inspect --format "{{.State.Health.Status}}" DevServer)" == "healthy" ]; do
          echo "Waiting for SQL Server to be healthy..."
          sleep 5
        done'

    - name: Test Redis connection
      run: |
        docker exec tms-redis-data-protection redis-cli -a $REDIS_PWD ping | grep PONG
        docker exec tms-redis-session-cache redis-cli -p 6379 -a $REDIS_PWD ping | grep PONG

    - name: Check Vault is responding
      run: |
        curl --fail http://localhost:8200/v1/sys/health || {
          echo "Vault not responding"
          docker-compose logs
          exit 1
        }

    - name: Stop and clean up
      if: always()
      run: docker-compose down -v